version: '3'

services:
  # ICE server, service port: 3478/udp and 3478/tcp
  coturn:
    build: coturn
    image: hub.docker.waypal.cn/waypal-coturn:1.0
    restart: always
    hostname: waypal-coturn
    network_mode: host
    ports:
      - ${EXPOSE_IP}:3478:3478
    environment:
      - SERVICE_NAME=waypal-coturn
      - SERVICE_TAGS=${TAG_INFO}
      - SERVICE_REGION=${REGION}
     
  # KMS Server
  kms1:
    build: kms
    image: hub.docker.waypal.cn/waypal-kms:1.0
    restart: always
    hostname: waypal-kms1
    depends_on:
      - "coturn"
      - "telegraf"
      - "kmonitor"
      - "registrator"
    #network_mode: host
    ports:
      - ${EXPOSE_IP}:18888:8888
    volumes:
      - ${KMS_VOLUME}/kms-media:/tmp
    environment:
      - GST_DEBUG=Kurento*:4
      - SERVICE_NAME=waypal-kms
      - SERVICE_TAGS=${TAG_INFO}
      - SERVICE_REGION=${REGION}
  kms2:
    build: kms
    image: hub.docker.waypal.cn/waypal-kms:1.0
    restart: always
    hostname: waypal-kms2
    depends_on:
      - "coturn"
      - "telegraf"
      - "kmonitor"
      - "registrator"
    #network_mode: host
    ports:
      - ${EXPOSE_IP}:18889:8888
    volumes:
      - ${KMS_VOLUME}/kms-media:/tmp
    environment:
      - GST_DEBUG=Kurento*:4
      - SERVICE_NAME=waypal-kms
      - SERVICE_TAGS=${TAG_INFO}
      - SERVICE_REGION=${REGION}

  #telegraf
  telegraf:
    build: telegraf
    image: hub.docker.waypal.cn/waypal-telegraf:1.0
    restart: always
    hostname: waypal-telegraf
    network_mode: host
    volumes:
      - ${MONITOR_VOLUME}/telegraf/etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  # Kms Monitor Client
  kmonitor:
    build: ./kmonitor
    restart: always
    network_mode: host
    environment:
      - KMS_URI=${KMS_URI}
      - KMS_NAME=${KMS_NAME}
      - GRAPHITE_IP=${GRAPHITE_SERVER_IP}
      - GRAPHITE_PORT=${GRAPHITE_SERVER_PORT}

  # Registrator (register container as services in Consul)
  registrator:
    build: registrator
    image: hub.docker.waypal.cn/waypal-registrator:1.0
    restart: always
    hostname: waypal-registrator
    command: -ip ${PRIVATE_IP} consul://${CONSUL_IP}:8500
    network_mode: host
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      - SERVICE_IGNORE=true 

  # Consul Server Cluster
  consul:
    build: consul
    image: hub.docker.waypal.cn/waypal-consul:1.0
    restart: always
    hostname: consul
    # Default port 8500
    command: -server -bootstrap-expect 1 -ui-dir /ui -advertise ${CONSUL_IP}
    #network_mode: host
    ports:
      - ${EXPOSE_IP}:8400:8400
      - ${EXPOSE_IP}:8500:8500
      - ${EXPOSE_IP}:8600:53/udp
    environment:
      - SERVICE_IGNORE=true

  fabio:
    image: magiconair/fabio
    restart: always
    hostname: fabio
    ports:
      - "9998:9998"
      - "9999:9999"
    volumes:
      - /home/waypal/volume/fabio/etc/fabio/fabio.properties:/etc/fabio/fabio.properties
    environment:
      - SERVICE_IGNORE=true

  haproxy_consul:
    build: haproxy_consul
    image: hub.docker.waypal.cn/haproxy_consul:latest
    restart: always
    hostname: haproxy-consul
    ports:
      - "10080:80"
    links:
      - consul:consul
    environment:
      - SERVICE_IGNORE=true

#  nginx_consul:
#    build: nginx_consul
#    image: hub.docker.waypal.cn/nginx_consul:latest
#    restart: always
#    hostname: nginx-consul
#    ports:
#      - "10090:80"
#    links:
#      - consul:consul
#    environment:
#      - SERVICE_IGNORE=true

  web1:
    image: nginx
    environment:
      SERVICE_TAGS: 172.17.101.173:1081
      SERVICE_NAME: web
    ports:
      - 1081:80

  web2:
    image: nginx
    environment:
      SERVICE_TAGS: 172.17.101.173:1082
      SERVICE_NAME: web
    ports:
      - 1082:80
  web3:
    image: nginx
    environment:
      SERVICE_TAGS: 172.17.101.173:1083
      SERVICE_NAME: web
    ports:
      - 1083:80
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24
